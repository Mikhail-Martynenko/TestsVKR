{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misha\\\\Desktop\\\\\\u042E\\u0424\\u0423\\\\React\\\\tests-vkr\\\\app-test-vkr\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Delaunay } from \"d3-delaunay\";\nimport './App.css';\nimport EarcutTest from \"./EarcutTest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let canvas = document.getElementById('canvas');\n  let context = canvas.getContext('2d');\n  let pointsForRectangle = [];\n  let pointsForCircle = []; //let jsonPoints = null;\n  //let jsonTrianglesPoints = null;\n\n  function triangulationRectangle(stepRectangle) {\n    for (let x = 0; x <= 600; x += stepRectangle) {\n      for (let y = 0; y <= 300; y += stepRectangle) {\n        pointsForRectangle.push([x, y]); //x+600, y+150\n      }\n    }\n  } // Функция для добавления точек в круг\n\n\n  function triangulationCircle(stepСircle) {\n    let radius = 200;\n    let x = null;\n    let y = null;\n    pointsForCircle.push([300, 300]); // for (let phi = 0; phi <= 360; phi += stepСircle) {\n    //     for (let radius = 200; radius >= 100; radius /= 2) {\n    //         x = Math.abs(Math.floor(radius * Math.cos(phi)) + 300);\n    //         y = Math.abs(Math.floor(radius * Math.sin(phi)) + 300);\n    //         pointsForCircle.push([x, y]);\n    //     }\n    // }\n\n    for (let phi = 0; phi <= 360; phi += stepСircle) {\n      x = Math.abs(Math.floor(radius * Math.cos(phi)) + 300);\n      y = Math.abs(Math.floor(radius * Math.sin(phi)) + 300);\n      pointsForCircle.push([x, y]);\n      console.log([x, y]);\n    } // for (let x = 0; x <= 200; x += 100) {\n    //     for (let y = 0; y <= 200; y += 100) {\n    //         pointsForCircle.push([x+200 , y+200 ]);\n    //     }\n    // }\n\n\n    drawCircle();\n  } // Нарисовать круг\n\n\n  function drawCircle() {\n    context.beginPath();\n    context.fillStyle = \"#FFF\";\n    context.arc(300, 300, 200, 0, Math.PI * 2);\n    context.fill();\n    context.stroke();\n    context.closePath();\n  } // Состояние JSON\n\n\n  const [jsonPoints, setJsonPoints] = useState('');\n  const [jsonVerticesOfTriangles, setJsonVerticesOfTriangles] = useState('');\n  useEffect(() => {}, []); // Триангуляция\n\n  function triangulation(arr) {\n    const delaunay = Delaunay.from(arr);\n    let triangles = delaunay.triangles;\n    let points = delaunay.points; // let inedges = delaunay.inedges\n    // console.log(inedges)\n    //console.log(triangles)\n\n    console.log(points);\n    /**/\n\n    let coordinates = []; // массив с координатами вершин треугольников\n\n    for (let i = 0; i < triangles.length / 3; i++) {\n      const {\n        points,\n        triangles\n      } = delaunay;\n      const t0 = triangles[i * 3 + 0];\n      const t1 = triangles[i * 3 + 1];\n      const t2 = triangles[i * 3 + 2];\n      coordinates.push([points[[t0 * 2]], points[[t0 * 2 + 1]], points[[t1 * 2]], points[t1 * 2 + 1], points[[t2 * 2]], points[t2 * 2 + 1]]);\n      context.beginPath();\n      context.moveTo(points[t0 * 2], points[t0 * 2 + 1]);\n      context.lineTo(points[t1 * 2], points[t1 * 2 + 1]);\n      context.lineTo(points[t2 * 2], points[t2 * 2 + 1]);\n      context.closePath();\n      context.stroke();\n    }\n\n    console.log(coordinates); // for (let i = 0; i < triangles.length/3; i += 1) {\n    //     const t0 = triangles[i * 3 + 0];\n    //     const t1 = triangles[i * 3 + 1];\n    //     const t2 = triangles[i * 3 + 2];\n    //     coordinates.push(\n    //       [points[[t0 * 2]], points[[t0 * 2 + 1]],\n    //       points[[t1 * 2]], points[t1 * 2 + 1],\n    //       points[[t2 * 2]], points[t2 * 2 + 1]]\n    //     );\n    // }\n    // Сделать нормально отдельной функцией или по-другому. Вроде правильно работает\n\n    let newArr = coordinates.map(elementArr => {\n      let a, b, c;\n      const arr = [];\n      a = Math.round(Math.abs(Math.sqrt(Math.pow(elementArr[2] - elementArr[0], 2) + Math.pow(elementArr[3] - elementArr[1], 2))));\n      b = Math.round(Math.abs(Math.sqrt(Math.pow(elementArr[4] - elementArr[0], 2) + Math.pow(elementArr[5] - elementArr[1], 2))));\n      c = Math.round(Math.abs(Math.sqrt(Math.pow(elementArr[4] - elementArr[2], 2) + Math.pow(elementArr[5] - elementArr[3], 2))));\n      arr.push(a);\n      arr.push(b);\n      arr.push(c);\n      return arr;\n    });\n    console.log(newArr); //triangulationQuality(coordinatesArr)\n\n    setJsonPoints(JSON.stringify(arr));\n    setJsonVerticesOfTriangles(JSON.stringify(triangles));\n  }\n\n  const [title, setTitle] = useState(40);\n  const [title2, setTitle2] = useState(40); // Кнопка триангуляции прямоугольника\n\n  function triangulationRectangleButton(e) {\n    e.preventDefault();\n    context.clearRect(500, 100, 800, 600);\n    triangulationRectangle(Number(title));\n    triangulation(pointsForRectangle);\n    pointsForRectangle = [];\n  } // Кнопка триангуляции круга\n\n\n  function triangulationCircleButton(e) {\n    e.preventDefault();\n    triangulationCircle(Number(title2));\n    triangulation(pointsForCircle);\n    pointsForCircle = [];\n  } // кнопка триангуляции полигона\n\n\n  function triangulationPolygonButton(e) {\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    let arrPointsPolygon = [[0, 0], [500, 0], [500, 500], [400, 500], [400, 250], [100, 250], [100, 500], [0, 500]];\n    e.preventDefault();\n    triangulation(arrPointsPolygon);\n  } // функция для оценки качества сетки(подсчёт длины треугольника по трём сторонам)\n\n\n  function triangulationQuality(verticesTriangleArr) {\n    let a, b, c, x1, x2, x3, y1, y2, y3;\n    a = Math.abs(Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)));\n    b = Math.abs(Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2)));\n    c = Math.abs(Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2)));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: triangulationRectangleButton,\n        children: \"\\u0422\\u0440\\u0438\\u0430\\u043D\\u0433\\u0443\\u043B\\u044F\\u0446\\u0438\\u044F \\u043F\\u0440\\u044F\\u043C\\u043E\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: title2,\n          onChange: e => setTitle2(e.target.value),\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: triangulationCircleButton,\n          children: \"\\u0422\\u0440\\u0438\\u0430\\u043D\\u0433\\u0443\\u043B\\u044F\\u0446\\u0438\\u044F \\u043A\\u0440\\u0443\\u0433\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: triangulationPolygonButton,\n          children: \"\\u0422\\u0440\\u0438\\u0430\\u043D\\u0433\\u0443\\u043B\\u044F\\u0446\\u0438\\u044F \\u043C\\u043D\\u043E\\u0433\\u043E\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EarcutTest, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"HsTzGpthscY+i4yiQmhVNBU07CQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/misha/Desktop/ЮФУ/React/tests-vkr/app-test-vkr/src/App.js"],"names":["React","useEffect","useRef","useState","Delaunay","EarcutTest","App","canvas","document","getElementById","context","getContext","pointsForRectangle","pointsForCircle","triangulationRectangle","stepRectangle","x","y","push","triangulationCircle","stepСircle","radius","phi","Math","abs","floor","cos","sin","console","log","drawCircle","beginPath","fillStyle","arc","PI","fill","stroke","closePath","jsonPoints","setJsonPoints","jsonVerticesOfTriangles","setJsonVerticesOfTriangles","triangulation","arr","delaunay","from","triangles","points","coordinates","i","length","t0","t1","t2","moveTo","lineTo","newArr","map","elementArr","a","b","c","round","sqrt","pow","JSON","stringify","title","setTitle","title2","setTitle2","triangulationRectangleButton","e","preventDefault","clearRect","Number","triangulationCircleButton","triangulationPolygonButton","width","height","arrPointsPolygon","triangulationQuality","verticesTriangleArr","x1","x2","x3","y1","y2","y3","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {Delaunay} from \"d3-delaunay\";\nimport './App.css'\nimport EarcutTest from \"./EarcutTest\";\n\n\n\nfunction App() {\n  let canvas = document.getElementById('canvas');\n  let context = canvas.getContext('2d');\n\n  let pointsForRectangle = [];\n  let pointsForCircle = [];\n  //let jsonPoints = null;\n  //let jsonTrianglesPoints = null;\n\n  function triangulationRectangle(stepRectangle) {\n    for (let x = 0; x <= 600; x += stepRectangle) {\n      for (let y = 0; y <= 300; y += stepRectangle) {\n        pointsForRectangle.push([x , y ]);//x+600, y+150\n      }\n    }\n  }\n\n\n// Функция для добавления точек в круг\n  function triangulationCircle(stepСircle) {\n    let radius = 200;\n    let x = null;\n    let y = null;\n    pointsForCircle.push([300, 300]);\n    // for (let phi = 0; phi <= 360; phi += stepСircle) {\n    //     for (let radius = 200; radius >= 100; radius /= 2) {\n    //         x = Math.abs(Math.floor(radius * Math.cos(phi)) + 300);\n    //         y = Math.abs(Math.floor(radius * Math.sin(phi)) + 300);\n    //         pointsForCircle.push([x, y]);\n    //     }\n    // }\n    for (let phi = 0; phi <= 360; phi += stepСircle) {\n      x = Math.abs(Math.floor(radius * Math.cos(phi)) + 300);\n      y = Math.abs(Math.floor(radius * Math.sin(phi)) + 300);\n      pointsForCircle.push([x, y]);\n      console.log(([x, y]))\n    }\n    // for (let x = 0; x <= 200; x += 100) {\n    //     for (let y = 0; y <= 200; y += 100) {\n    //         pointsForCircle.push([x+200 , y+200 ]);\n    //     }\n    // }\n    drawCircle()\n  }\n\n// Нарисовать круг\n  function drawCircle() {\n    context.beginPath();\n    context.fillStyle = \"#FFF\";\n    context.arc(300, 300, 200, 0, Math.PI * 2);\n    context.fill();\n    context.stroke();\n    context.closePath();\n  }\n\n  // Состояние JSON\n  const [jsonPoints, setJsonPoints] = useState('')\n  const [jsonVerticesOfTriangles, setJsonVerticesOfTriangles] = useState('')\n\n\n  useEffect(() => {\n\n  }, [])\n\n\n// Триангуляция\n  function triangulation(arr) {\n    const delaunay = Delaunay.from(arr);\n    let triangles = delaunay.triangles\n   let points = delaunay.points;\n    // let inedges = delaunay.inedges\n    // console.log(inedges)\n    //console.log(triangles)\n    console.log(points)\n    /**/\n     let coordinates = []; // массив с координатами вершин треугольников\n\n    for (let i = 0; i < triangles.length/3; i++) {\n      const {points, triangles} = delaunay;\n      const t0 = triangles[i * 3 + 0];\n      const t1 = triangles[i * 3 + 1];\n      const t2 = triangles[i * 3 + 2];\n\n      coordinates.push(\n                [points[[t0 * 2]], points[[t0 * 2 + 1]],\n                points[[t1 * 2]], points[t1 * 2 + 1],\n                points[[t2 * 2]], points[t2 * 2 + 1]]\n              );\n\n      context.beginPath();\n      context.moveTo(points[t0 * 2], points[t0 * 2 + 1]);\n      context.lineTo(points[t1 * 2], points[t1 * 2 + 1]);\n      context.lineTo(points[t2 * 2], points[t2 * 2 + 1]);\n      context.closePath();\n      context.stroke();\n    }\n     console.log(coordinates)\n\n    // for (let i = 0; i < triangles.length/3; i += 1) {\n    //     const t0 = triangles[i * 3 + 0];\n    //     const t1 = triangles[i * 3 + 1];\n    //     const t2 = triangles[i * 3 + 2];\n    //     coordinates.push(\n    //       [points[[t0 * 2]], points[[t0 * 2 + 1]],\n    //       points[[t1 * 2]], points[t1 * 2 + 1],\n    //       points[[t2 * 2]], points[t2 * 2 + 1]]\n    //     );\n    // }\n\n// Сделать нормально отдельной функцией или по-другому. Вроде правильно работает\n   let newArr = coordinates.map(elementArr => {\n     let a, b, c;\n     const arr = [];\n     a = Math.round(Math.abs(Math.sqrt(Math.pow((elementArr[2] - elementArr[0]), 2) + Math.pow((elementArr[3] - elementArr[1]), 2))));\n     b = Math.round(Math.abs(Math.sqrt(Math.pow((elementArr[4] - elementArr[0]), 2) + Math.pow((elementArr[5] - elementArr[1]), 2))));\n     c = Math.round(Math.abs(Math.sqrt(Math.pow((elementArr[4] - elementArr[2]), 2) + Math.pow((elementArr[5] - elementArr[3]), 2))));\n     arr.push(a)\n     arr.push(b)\n     arr.push(c)\n     return arr;\n   })\n    console.log(newArr)\n\n\n\n\n    //triangulationQuality(coordinatesArr)\n    setJsonPoints(JSON.stringify(arr))\n    setJsonVerticesOfTriangles(JSON.stringify(triangles))\n  }\n\n\n  const [title, setTitle] = useState(40)\n  const [title2, setTitle2] = useState(40)\n\n\n  // Кнопка триангуляции прямоугольника\n  function triangulationRectangleButton(e) {\n\n    e.preventDefault();\n    context.clearRect(500, 100, 800, 600);\n    triangulationRectangle(Number(title))\n    triangulation(pointsForRectangle)\n\n    pointsForRectangle = [];\n  }\n\n  // Кнопка триангуляции круга\n  function triangulationCircleButton(e) {\n\n    e.preventDefault();\n    triangulationCircle(Number(title2))\n    triangulation(pointsForCircle)\n\n    pointsForCircle = [];\n  }\n\n  // кнопка триангуляции полигона\n  function triangulationPolygonButton(e) {\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    let arrPointsPolygon = [[0, 0], [500, 0], [500, 500], [400, 500], [400, 250], [100, 250], [100, 500], [0, 500]]\n    e.preventDefault();\n    triangulation(arrPointsPolygon)\n  }\n\n// функция для оценки качества сетки(подсчёт длины треугольника по трём сторонам)\nfunction triangulationQuality(verticesTriangleArr) {\n  let a, b, c, x1, x2, x3, y1, y2, y3;\n  a = Math.abs(Math.sqrt(Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2)));\n  b = Math.abs(Math.sqrt(Math.pow((x3 - x2), 2) + Math.pow((y3 - y2), 2)));\n  c = Math.abs(Math.sqrt(Math.pow((x3 - x1), 2) + Math.pow((y3 - y1), 2)));\n}\n\n\n\n  return (\n      <div className='App'>\n        <form>\n          <input\n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              type='number'\n          />\n          <button onClick={triangulationRectangleButton}>Триангуляция прямоугольника</button>\n          <div>\n            <input\n                value={title2}\n                onChange={e => setTitle2(e.target.value)}\n                type='number'\n            />\n            <button onClick={triangulationCircleButton}>Триангуляция круга</button>\n          </div>\n          <div>\n            <button onClick={triangulationPolygonButton}>Триангуляция многоугольника</button>\n          </div>\n        </form>\n        <div>\n          {/*<div>*/}\n          {/*  <div>JSON</div>*/}\n          {/*  <div>Координаты точек</div>*/}\n          {/*  <div>{jsonPoints}</div>*/}\n          {/*  <div>Номера вершин треугольников</div>*/}\n          {/*  <div>{jsonVerticesOfTriangles}</div>*/}\n          {/*</div>*/}\n\n        </div>\n\n        <EarcutTest/>\n\n      </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}