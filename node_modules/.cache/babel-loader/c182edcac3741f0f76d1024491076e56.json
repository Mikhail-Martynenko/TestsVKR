{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misha\\\\Desktop\\\\\\u042E\\u0424\\u0423\\\\React\\\\tests-vkr\\\\app-test-vkr\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Delaunay } from \"d3-delaunay\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let canvas = document.getElementById('canvas');\n  let context = canvas.getContext('2d');\n  let pointsForRectangle = [];\n  let pointsForCircle = []; //let jsonPoints = null;\n  //let jsonTrianglesPoints = null;\n\n  function triangulationRectangle(stepRectangle) {\n    for (let x = 0; x <= 600; x += stepRectangle) {\n      for (let y = 0; y <= 300; y += stepRectangle) {\n        pointsForRectangle.push([x + 600, y + 150]);\n      }\n    }\n  }\n\n  function triangulationSVG() {\n    let pointsForSVG = [];\n    let svg = d3.select(\"svg\");\n    let width = svg.attr(\"width\");\n    let height = svg.attr(\"height\"); //let path = svg.attr(\"path\");\n\n    console.log(width);\n    console.log(height);\n    let p = new Path2D(\"M228,48L0.428,443c-0.9,1.7-0.23,2.99,1.61,2.99h455c1.84,0,2-1,1-2.99L231,48C230,46,229,46,228,48z M45,416.808L229.229,99.907l183.229,316.901H45.999z\");\n    let p2 = new Path2D(\"m69.65256,120.21477l641.2864,-4.21476l3.06103,307.67784l-130.0939,0l-1.53052,-147.51677l-371.9155,-4.21476l0,158.05369l-148.4601,0l7.65258,-309.78523z\");\n    context.stroke(p2); // for (let x = 0; x <= width; x += 50) {\n    //     for (let y = 0; y <= height; y += 50) {\n    //         pointsForSVG.push([x, y]);\n    //     }\n    // }\n\n    const delaunay = Delaunay.from(pointsForSVG);\n    console.log(delaunay);\n  } //triangulationSVG();\n  // Функция для добавления точек в круг\n\n\n  function triangulationCircle(stepСircle) {\n    let radius = 200;\n    let x = null;\n    let y = null;\n    pointsForCircle.push([300, 300]); // for (let phi = 0; phi <= 360; phi += stepСircle) {\n    //     for (let radius = 200; radius >= 100; radius /= 2) {\n    //         x = Math.abs(Math.floor(radius * Math.cos(phi)) + 300);\n    //         y = Math.abs(Math.floor(radius * Math.sin(phi)) + 300);\n    //         pointsForCircle.push([x, y]);\n    //     }\n    // }\n\n    for (let phi = 0; phi <= 360; phi += stepСircle) {\n      x = Math.abs(Math.floor(radius * Math.cos(phi)) + 300);\n      y = Math.abs(Math.floor(radius * Math.sin(phi)) + 300);\n      pointsForCircle.push([x, y]);\n      console.log([x, y]);\n    } // for (let x = 0; x <= 200; x += 100) {\n    //     for (let y = 0; y <= 200; y += 100) {\n    //         pointsForCircle.push([x+200 , y+200 ]);\n    //     }\n    // }\n\n\n    drawCircle();\n  } // Нарисовать круг\n\n\n  function drawCircle() {\n    context.beginPath();\n    context.fillStyle = \"#FFF\";\n    context.arc(300, 300, 200, 0, Math.PI * 2);\n    context.fill();\n    context.stroke();\n    context.closePath();\n  } // Состояние JSON\n\n\n  const [jsonPoints, setJsonPoints] = useState('');\n  const [jsonVerticesOfTriangles, setJsonVerticesOfTriangles] = useState('');\n  useEffect(() => {}, []); // Триангуляция\n\n  function triangulation(arr) {\n    const delaunay = Delaunay.from(arr);\n    let tr = delaunay.triangles;\n\n    for (let i = 0; i < tr.length; i++) {\n      const {\n        points,\n        triangles\n      } = delaunay;\n      const t0 = triangles[i * 3 + 0];\n      const t1 = triangles[i * 3 + 1];\n      const t2 = triangles[i * 3 + 2];\n      context.beginPath();\n      context.moveTo(points[t0 * 2], points[t0 * 2 + 1]);\n      context.lineTo(points[t1 * 2], points[t1 * 2 + 1]);\n      context.lineTo(points[t2 * 2], points[t2 * 2 + 1]);\n      context.closePath();\n      context.stroke();\n    }\n\n    setJsonPoints(JSON.stringify(arr));\n    setJsonVerticesOfTriangles(JSON.stringify(tr));\n  }\n\n  const [title, setTitle] = useState(40);\n  const [title2, setTitle2] = useState(40); // Кнопка триангуляции прямоугольника\n\n  function triangulationRectangleButton(e) {\n    e.preventDefault();\n    context.clearRect(500, 100, 800, 600);\n    triangulationRectangle(Number(title));\n    triangulation(pointsForRectangle);\n    pointsForRectangle = [];\n  } // Кнопка триангуляции круга\n\n\n  function triangulationCircleButton(e) {\n    e.preventDefault();\n    triangulationCircle(Number(title2));\n    triangulation(pointsForCircle);\n    pointsForCircle = [];\n  } // function foo(e) {\n  //     e.preventDefault();\n  //\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: triangulationRectangleButton,\n        children: \"\\u0422\\u0440\\u0438\\u0430\\u043D\\u0433\\u0443\\u043B\\u044F\\u0446\\u0438\\u044F \\u043F\\u0440\\u044F\\u043C\\u043E\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: title2,\n          onChange: e => setTitle2(e.target.value),\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: triangulationCircleButton,\n          children: \"\\u0422\\u0440\\u0438\\u0430\\u043D\\u0433\\u0443\\u043B\\u044F\\u0446\\u0438\\u044F \\u043A\\u0440\\u0443\\u0433\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u041A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442\\u044B \\u0442\\u043E\\u0447\\u0435\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: jsonPoints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u041D\\u043E\\u043C\\u0435\\u0440\\u0430 \\u0432\\u0435\\u0440\\u0448\\u0438\\u043D \\u0442\\u0440\\u0435\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u043E\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: jsonVerticesOfTriangles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"HsTzGpthscY+i4yiQmhVNBU07CQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/misha/Desktop/ЮФУ/React/tests-vkr/app-test-vkr/src/App.js"],"names":["React","useEffect","useRef","useState","Delaunay","App","canvas","document","getElementById","context","getContext","pointsForRectangle","pointsForCircle","triangulationRectangle","stepRectangle","x","y","push","triangulationSVG","pointsForSVG","svg","d3","select","width","attr","height","console","log","p","Path2D","p2","stroke","delaunay","from","triangulationCircle","stepСircle","radius","phi","Math","abs","floor","cos","sin","drawCircle","beginPath","fillStyle","arc","PI","fill","closePath","jsonPoints","setJsonPoints","jsonVerticesOfTriangles","setJsonVerticesOfTriangles","triangulation","arr","tr","triangles","i","length","points","t0","t1","t2","moveTo","lineTo","JSON","stringify","title","setTitle","title2","setTitle2","triangulationRectangleButton","e","preventDefault","clearRect","Number","triangulationCircleButton","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {Delaunay} from \"d3-delaunay\";\nimport './App.css'\n\n\nfunction App() {\n  let canvas = document.getElementById('canvas');\n  let context = canvas.getContext('2d');\n\n  let pointsForRectangle = [];\n  let pointsForCircle = [];\n  //let jsonPoints = null;\n  //let jsonTrianglesPoints = null;\n \n  function triangulationRectangle(stepRectangle) {\n    for (let x = 0; x <= 600; x += stepRectangle) {\n      for (let y = 0; y <= 300; y += stepRectangle) {\n        pointsForRectangle.push([x + 600, y + 150]);\n      }\n    }\n  }\n\n  function triangulationSVG() {\n    let pointsForSVG = [];\n    let svg = d3.select(\"svg\");\n    let width = svg.attr(\"width\");\n    let height = svg.attr(\"height\");\n    //let path = svg.attr(\"path\");\n    console.log(width);\n    console.log(height);\n\n    let p = new Path2D(\"M228,48L0.428,443c-0.9,1.7-0.23,2.99,1.61,2.99h455c1.84,0,2-1,1-2.99L231,48C230,46,229,46,228,48z M45,416.808L229.229,99.907l183.229,316.901H45.999z\");\n    let p2 = new Path2D(\"m69.65256,120.21477l641.2864,-4.21476l3.06103,307.67784l-130.0939,0l-1.53052,-147.51677l-371.9155,-4.21476l0,158.05369l-148.4601,0l7.65258,-309.78523z\")\n    context.stroke(p2);\n\n\n    // for (let x = 0; x <= width; x += 50) {\n    //     for (let y = 0; y <= height; y += 50) {\n    //         pointsForSVG.push([x, y]);\n    //     }\n    // }\n    const delaunay = Delaunay.from(pointsForSVG);\n    console.log(delaunay)\n  }\n  //triangulationSVG();\n\n\n\n\n// Функция для добавления точек в круг\n  function triangulationCircle(stepСircle) {\n    let radius = 200;\n    let x = null;\n    let y = null;\n    pointsForCircle.push([300, 300]);\n    // for (let phi = 0; phi <= 360; phi += stepСircle) {\n    //     for (let radius = 200; radius >= 100; radius /= 2) {\n    //         x = Math.abs(Math.floor(radius * Math.cos(phi)) + 300);\n    //         y = Math.abs(Math.floor(radius * Math.sin(phi)) + 300);\n    //         pointsForCircle.push([x, y]);\n    //     }\n    // }\n    for (let phi = 0; phi <= 360; phi += stepСircle) {\n      x = Math.abs(Math.floor(radius * Math.cos(phi)) + 300);\n      y = Math.abs(Math.floor(radius * Math.sin(phi)) + 300);\n      pointsForCircle.push([x, y]);\n      console.log(([x, y]))\n    }\n    // for (let x = 0; x <= 200; x += 100) {\n    //     for (let y = 0; y <= 200; y += 100) {\n    //         pointsForCircle.push([x+200 , y+200 ]);\n    //     }\n    // }\n    drawCircle()\n  }\n\n// Нарисовать круг\n  function drawCircle() {\n    context.beginPath();\n    context.fillStyle = \"#FFF\";\n    context.arc(300, 300, 200, 0, Math.PI * 2);\n    context.fill();\n    context.stroke();\n    context.closePath();\n  }\n\n  // Состояние JSON\n  const [jsonPoints, setJsonPoints] = useState('')\n  const [jsonVerticesOfTriangles, setJsonVerticesOfTriangles] = useState('')\n\n\n  useEffect(()=> {\n\n  }, [])\n\n\n// Триангуляция\n  function triangulation(arr) {\n    const delaunay = Delaunay.from(arr);\n    let tr = delaunay.triangles\n    for (let i = 0; i < tr.length; i++) {\n      const {points, triangles} = delaunay;\n      const t0 = triangles[i * 3 + 0];\n      const t1 = triangles[i * 3 + 1];\n      const t2 = triangles[i * 3 + 2];\n      context.beginPath();\n      context.moveTo(points[t0 * 2], points[t0 * 2 + 1]);\n      context.lineTo(points[t1 * 2], points[t1 * 2 + 1]);\n      context.lineTo(points[t2 * 2], points[t2 * 2 + 1]);\n      context.closePath();\n      context.stroke();\n    }\n\n    setJsonPoints(JSON.stringify(arr))\n    setJsonVerticesOfTriangles(JSON.stringify(tr))\n\n\n  }\n\n\n  const [title, setTitle] = useState(40)\n  const [title2, setTitle2] = useState(40)\n\n\n  // Кнопка триангуляции прямоугольника\n  function triangulationRectangleButton(e) {\n\n    e.preventDefault();\n    context.clearRect(500, 100, 800, 600);\n    triangulationRectangle(Number(title))\n    triangulation(pointsForRectangle)\n\n    pointsForRectangle = [];\n  }\n\n  // Кнопка триангуляции круга\n  function triangulationCircleButton(e) {\n\n    e.preventDefault();\n    triangulationCircle(Number(title2))\n    triangulation(pointsForCircle)\n\n    pointsForCircle = [];\n  }\n\n  // function foo(e) {\n  //     e.preventDefault();\n  //\n  // }\n\n  return (\n      <div className='App'>\n        <form>\n          <input\n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              type ='number'\n          />\n          <button onClick={triangulationRectangleButton}>Триангуляция прямоугольника</button>\n          <div>\n            <input\n                value={title2}\n                onChange={e => setTitle2(e.target.value)}\n                type ='number'\n            />\n            <button onClick={triangulationCircleButton}>Триангуляция круга</button>\n          </div>\n        </form>\n        <div>\n          {/*<button onClick={foo}>Получить JSON</button>*/}\n          <div>\n            <div>JSON</div>\n            <div>Координаты точек</div>\n            <div>{jsonPoints}</div>\n            <div>Номера вершин треугольников</div>\n            <div>{jsonVerticesOfTriangles}</div>\n          </div>\n\n        </div>\n\n\n      </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}