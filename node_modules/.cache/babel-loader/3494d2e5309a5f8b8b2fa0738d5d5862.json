{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misha\\\\Desktop\\\\\\u042E\\u0424\\u0423\\\\React\\\\tests-vkr\\\\app-test-vkr\\\\src\\\\EarcutTest.jsx\";\nimport React from 'react';\nimport earcut from \"earcut\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EarcutTest = () => {\n  let canvas = document.getElementById('canvas');\n  let context = canvas.getContext('2d');\n\n  function drawCircle() {\n    context.beginPath();\n    context.fillStyle = \"#FFF\";\n    context.arc(300, 300, 200, 0, Math.PI * 2);\n    context.fill();\n    context.stroke();\n    context.closePath();\n  }\n\n  drawCircle();\n  let triangles = earcut([10, 0, 0, 50, 60, 60, 70, 10]); // returns [1,0,3, 3,2,1]\n\n  let v = triangles.vertices;\n\n  for (let i = 0; i < result.length; i += 3) {\n    context.beginPath();\n    context.moveTo(v[result[i] * 2], v[result[i] * 2 + 1]);\n    context.lineTo(v[result[i + 1] * 2], v[result[i + 1] * 2 + 1]);\n    context.lineTo(v[result[i + 2] * 2], v[result[i + 2] * 2 + 1]);\n    context.closePath();\n    context.stroke();\n  }\n\n  console.log(triangles);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello!!!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = EarcutTest;\nexport default EarcutTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"EarcutTest\");","map":{"version":3,"sources":["C:/Users/misha/Desktop/ЮФУ/React/tests-vkr/app-test-vkr/src/EarcutTest.jsx"],"names":["React","earcut","EarcutTest","canvas","document","getElementById","context","getContext","drawCircle","beginPath","fillStyle","arc","Math","PI","fill","stroke","closePath","triangles","v","vertices","i","result","length","moveTo","lineTo","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,MAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAb;AACA,MAAIC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAd;;AAEA,WAASC,UAAT,GAAsB;AAClBF,IAAAA,OAAO,CAACG,SAAR;AACAH,IAAAA,OAAO,CAACI,SAAR,GAAoB,MAApB;AACAJ,IAAAA,OAAO,CAACK,GAAR,CAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,IAAI,CAACC,EAAL,GAAU,CAAxC;AACAP,IAAAA,OAAO,CAACQ,IAAR;AACAR,IAAAA,OAAO,CAACS,MAAR;AACAT,IAAAA,OAAO,CAACU,SAAR;AACH;;AACDR,EAAAA,UAAU;AACV,MAAIS,SAAS,GAAGhB,MAAM,CAAC,CAAC,EAAD,EAAI,CAAJ,EAAO,CAAP,EAAS,EAAT,EAAa,EAAb,EAAgB,EAAhB,EAAoB,EAApB,EAAuB,EAAvB,CAAD,CAAtB,CAbqB,CAa+B;;AACpD,MAAIiB,CAAC,GAAGD,SAAS,CAACE,QAAlB;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGC,MAAM,CAACC,MAA1B,EAAkCF,CAAC,IAAI,CAAvC,EAAyC;AACrCd,IAAAA,OAAO,CAACG,SAAR;AACAH,IAAAA,OAAO,CAACiB,MAAR,CAAeL,CAAC,CAACG,MAAM,CAACD,CAAD,CAAN,GAAU,CAAX,CAAhB,EAA8BF,CAAC,CAACG,MAAM,CAACD,CAAD,CAAN,GAAU,CAAV,GAAY,CAAb,CAA/B;AACAd,IAAAA,OAAO,CAACkB,MAAR,CAAeN,CAAC,CAACG,MAAM,CAACD,CAAC,GAAC,CAAH,CAAN,GAAY,CAAb,CAAhB,EAAgCF,CAAC,CAACG,MAAM,CAACD,CAAC,GAAC,CAAH,CAAN,GAAY,CAAZ,GAAc,CAAf,CAAjC;AACAd,IAAAA,OAAO,CAACkB,MAAR,CAAeN,CAAC,CAACG,MAAM,CAACD,CAAC,GAAC,CAAH,CAAN,GAAY,CAAb,CAAhB,EAAgCF,CAAC,CAACG,MAAM,CAACD,CAAC,GAAC,CAAH,CAAN,GAAY,CAAZ,GAAc,CAAf,CAAjC;AACAd,IAAAA,OAAO,CAACU,SAAR;AACAV,IAAAA,OAAO,CAACS,MAAR;AACH;;AACDU,EAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA7BD;;KAAMf,U;AA+BN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport earcut from \"earcut\";\r\n\r\nconst EarcutTest = () => {\r\n    let canvas = document.getElementById('canvas');\r\n    let context = canvas.getContext('2d');\r\n\r\n    function drawCircle() {\r\n        context.beginPath();\r\n        context.fillStyle = \"#FFF\";\r\n        context.arc(300, 300, 200, 0, Math.PI * 2);\r\n        context.fill();\r\n        context.stroke();\r\n        context.closePath();\r\n    }\r\n    drawCircle()\r\n    let triangles = earcut([10,0, 0,50, 60,60, 70,10]); // returns [1,0,3, 3,2,1]\r\n    let v = triangles.vertices\r\n    for(let i = 0; i < result.length; i += 3){\r\n        context.beginPath();\r\n        context.moveTo(v[result[i]*2],v[result[i]*2+1])\r\n        context.lineTo(v[result[i+1]*2],v[result[i+1]*2+1])\r\n        context.lineTo(v[result[i+2]*2],v[result[i+2]*2+1])\r\n        context.closePath();\r\n        context.stroke();\r\n    }\r\n    console.log(triangles)\r\n    return (\r\n        <div>\r\n            Hello!!!\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EarcutTest;"]},"metadata":{},"sourceType":"module"}