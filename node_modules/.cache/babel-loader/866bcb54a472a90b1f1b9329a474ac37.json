{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misha\\\\Desktop\\\\\\u042E\\u0424\\u0423\\\\React\\\\tests-vkr\\\\app-test-vkr\\\\src\\\\EarcutTest.jsx\";\nimport React from 'react';\nimport earcut from \"earcut\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EarcutTest = () => {\n  let canvas = document.getElementById('canvas');\n  let context = canvas.getContext('2d');\n\n  function drawCircle() {\n    context.beginPath();\n    context.fillStyle = \"#FFF\";\n    context.arc(300, 300, 200, 0, Math.PI * 2);\n    context.fill();\n    context.stroke();\n    context.closePath();\n  }\n\n  drawCircle();\n  let triangles = earcut([10, 0, 0, 50, 60, 60, 70, 10]); // returns [1,0,3, 3,2,1]\n\n  console.log(triangles); //let v = triangles.vertices\n\n  for (let i = 0; i < triangles.length; i += 3) {\n    const t0 = triangles[i * 3 + 0];\n    const t1 = triangles[i * 3 + 1];\n    const t2 = triangles[i * 3 + 2];\n    context.beginPath();\n    context.moveTo(triangles[t0 * 2], triangles[t0 * 2 + 1]);\n    context.lineTo(triangles[t1 * 2], triangles[t1 * 2 + 1]);\n    context.lineTo(triangles[t2 * 2], triangles[t2 * 2 + 1]);\n    context.closePath();\n    context.stroke();\n  } // var a = [\n  //     [[0,100],[100,100],[100,0],[0,0]], //outer polygon\n  //     [[25,25],[75,25],[75,75],[25,75]] //hole\n  // ]\n  // var toProcess = earcut.flatten(a);\n  // var result = earcut(toProcess.vertices, toProcess.holes, toProcess.dimensions);\n  // console.log(toProcess)\n  // console.log(result)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello!!!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_c = EarcutTest;\nexport default EarcutTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"EarcutTest\");","map":{"version":3,"sources":["C:/Users/misha/Desktop/ЮФУ/React/tests-vkr/app-test-vkr/src/EarcutTest.jsx"],"names":["React","earcut","EarcutTest","canvas","document","getElementById","context","getContext","drawCircle","beginPath","fillStyle","arc","Math","PI","fill","stroke","closePath","triangles","console","log","i","length","t0","t1","t2","moveTo","lineTo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,MAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAb;AACA,MAAIC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAd;;AAEA,WAASC,UAAT,GAAsB;AAClBF,IAAAA,OAAO,CAACG,SAAR;AACAH,IAAAA,OAAO,CAACI,SAAR,GAAoB,MAApB;AACAJ,IAAAA,OAAO,CAACK,GAAR,CAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,IAAI,CAACC,EAAL,GAAU,CAAxC;AACAP,IAAAA,OAAO,CAACQ,IAAR;AACAR,IAAAA,OAAO,CAACS,MAAR;AACAT,IAAAA,OAAO,CAACU,SAAR;AACH;;AACDR,EAAAA,UAAU;AACV,MAAIS,SAAS,GAAGhB,MAAM,CAAC,CAAC,EAAD,EAAI,CAAJ,EAAO,CAAP,EAAS,EAAT,EAAa,EAAb,EAAgB,EAAhB,EAAoB,EAApB,EAAuB,EAAvB,CAAD,CAAtB,CAbqB,CAa+B;;AACpDiB,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ,EAdqB,CAerB;;AACA,OAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,SAAS,CAACI,MAA7B,EAAqCD,CAAC,IAAI,CAA1C,EAA4C;AACxC,UAAME,EAAE,GAAGL,SAAS,CAACG,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAApB;AACA,UAAMG,EAAE,GAAGN,SAAS,CAACG,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAApB;AACA,UAAMI,EAAE,GAAGP,SAAS,CAACG,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAApB;AACAd,IAAAA,OAAO,CAACG,SAAR;AACAH,IAAAA,OAAO,CAACmB,MAAR,CAAeR,SAAS,CAACK,EAAE,GAAG,CAAN,CAAxB,EAAkCL,SAAS,CAACK,EAAE,GAAG,CAAL,GAAS,CAAV,CAA3C;AACAhB,IAAAA,OAAO,CAACoB,MAAR,CAAeT,SAAS,CAACM,EAAE,GAAG,CAAN,CAAxB,EAAkCN,SAAS,CAACM,EAAE,GAAG,CAAL,GAAS,CAAV,CAA3C;AACAjB,IAAAA,OAAO,CAACoB,MAAR,CAAeT,SAAS,CAACO,EAAE,GAAG,CAAN,CAAxB,EAAkCP,SAAS,CAACO,EAAE,GAAG,CAAL,GAAS,CAAV,CAA3C;AACAlB,IAAAA,OAAO,CAACU,SAAR;AACAV,IAAAA,OAAO,CAACS,MAAR;AACH,GA1BoB,CA6BrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA1CD;;KAAMb,U;AA4CN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport earcut from \"earcut\";\r\n\r\nconst EarcutTest = () => {\r\n    let canvas = document.getElementById('canvas');\r\n    let context = canvas.getContext('2d');\r\n\r\n    function drawCircle() {\r\n        context.beginPath();\r\n        context.fillStyle = \"#FFF\";\r\n        context.arc(300, 300, 200, 0, Math.PI * 2);\r\n        context.fill();\r\n        context.stroke();\r\n        context.closePath();\r\n    }\r\n    drawCircle()\r\n    let triangles = earcut([10,0, 0,50, 60,60, 70,10]); // returns [1,0,3, 3,2,1]\r\n    console.log(triangles)\r\n    //let v = triangles.vertices\r\n    for(let i = 0; i < triangles.length; i += 3){\r\n        const t0 = triangles[i * 3 + 0];\r\n        const t1 = triangles[i * 3 + 1];\r\n        const t2 = triangles[i * 3 + 2];\r\n        context.beginPath();\r\n        context.moveTo(triangles[t0 * 2], triangles[t0 * 2 + 1]);\r\n        context.lineTo(triangles[t1 * 2], triangles[t1 * 2 + 1]);\r\n        context.lineTo(triangles[t2 * 2], triangles[t2 * 2 + 1]);\r\n        context.closePath();\r\n        context.stroke();\r\n    }\r\n\r\n\r\n    // var a = [\r\n    //     [[0,100],[100,100],[100,0],[0,0]], //outer polygon\r\n    //     [[25,25],[75,25],[75,75],[25,75]] //hole\r\n    // ]\r\n    // var toProcess = earcut.flatten(a);\r\n    // var result = earcut(toProcess.vertices, toProcess.holes, toProcess.dimensions);\r\n    // console.log(toProcess)\r\n    // console.log(result)\r\n    return (\r\n        <div>\r\n            Hello!!!\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EarcutTest;"]},"metadata":{},"sourceType":"module"}