{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misha\\\\Desktop\\\\\\u042E\\u0424\\u0423\\\\React\\\\tests-vkr\\\\app-test-vkr\\\\src\\\\EarcutTest.jsx\";\nimport React from 'react';\nimport earcut from \"earcut\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EarcutTest = () => {\n  let canvas = document.getElementById('canvas');\n  let context = canvas.getContext('2d'); // function drawCircle() {\n  //     context.beginPath();\n  //     context.fillStyle = \"#FFF\";\n  //     context.arc(300, 300, 200, 0, Math.PI * 2);\n  //     context.fill();\n  //     context.stroke();\n  //     context.closePath();\n  // }\n  // drawCircle()\n  //let triangles = earcut([10,0, 0,50, 60,60, 70,10]); // returns [1,0,3, 3,2,1]\n  // quadrate\n  //  let a = [\n  //      [[0,100],[100,100],[100,0],[0,0]], //outer polygon\n  //      [[25,25],[75,25],[75,75],[25,75]] //hole\n  //  ]\n\n  /*\r\n   //  function triangulationCircle(stepСircle) {\r\n   //     const pointsForCircle = [];\r\n   //\r\n   //      let radius = 200;\r\n   //      let x = null;\r\n   //      let y = null;\r\n   //      pointsForCircle.push([300, 300]);\r\n   //      for (let phi = 0; phi <= 360; phi += stepСircle) {\r\n   //          x = Math.abs(Math.floor(radius * Math.cos(phi)) + 300);\r\n   //          y = Math.abs(Math.floor(radius * Math.sin(phi)) + 300);\r\n   //          pointsForCircle.push([x, y]);\r\n   //      }\r\n   //      const arrResult = [];\r\n   //      arrResult.splice(0,0,pointsForCircle)\r\n   //      console.log(arrResult)\r\n   //\r\n   //      triangulationEarcut(arrResult)\r\n   //  }\r\n   //  triangulationCircle(40);\r\n  */\n  // // circle\n  //  let circle = [\n  //      [[104,343],[115,222],[150,449],[243,491],[480,214],[277,101],[365,489],[397,125],[462,416]], //outer polygon\n  //     // [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]] //hole\n  //  ]\n  //polygon\n\n  let polygon = [[[0, 0], [500, 0], [500, 500], [400, 500], [400, 250], [100, 250], [100, 500], [0, 500]] //outer polygon\n  // [[250,25],[250,50],[100,50],[100,25]] //hole\n  ]; //rectangle\n\n  let rectangleArrayPoints = [[[1200, 600], [1200, 300], [600, 300], [600, 600], [800, 100]] //outer polygon\n  //  [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]] //hole\n  ];\n\n  function triangulationEarcut(array) {\n    let toProcess = earcut.flatten(array);\n    let result = earcut(toProcess.vertices, toProcess.holes, toProcess.dimensions);\n    console.log(toProcess);\n    console.log(result);\n    let v = toProcess.vertices;\n\n    for (let i = 0; i < result.length; i += 3) {\n      context.beginPath();\n      context.moveTo(v[result[i] * 2], v[result[i] * 2 + 1]);\n      context.lineTo(v[result[i + 1] * 2], v[result[i + 1] * 2 + 1]);\n      context.lineTo(v[result[i + 2] * 2], v[result[i + 2] * 2 + 1]);\n      context.closePath();\n      context.stroke();\n    }\n\n    let deviation = earcut.deviation(toProcess.vertices, toProcess.holes, toProcess.dimensions, result);\n    console.log(deviation);\n  }\n\n  triangulationEarcut(rectangleArrayPoints);\n  triangulationEarcut(polygon); //triangulationEarcut(circle)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello!!!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_c = EarcutTest;\nexport default EarcutTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"EarcutTest\");","map":{"version":3,"sources":["C:/Users/misha/Desktop/ЮФУ/React/tests-vkr/app-test-vkr/src/EarcutTest.jsx"],"names":["React","earcut","EarcutTest","canvas","document","getElementById","context","getContext","polygon","rectangleArrayPoints","triangulationEarcut","array","toProcess","flatten","result","vertices","holes","dimensions","console","log","v","i","length","beginPath","moveTo","lineTo","closePath","stroke","deviation"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport earcut from \"earcut\";\r\n\r\nconst EarcutTest = () => {\r\n    let canvas = document.getElementById('canvas');\r\n    let context = canvas.getContext('2d');\r\n\r\n    // function drawCircle() {\r\n    //     context.beginPath();\r\n    //     context.fillStyle = \"#FFF\";\r\n    //     context.arc(300, 300, 200, 0, Math.PI * 2);\r\n    //     context.fill();\r\n    //     context.stroke();\r\n    //     context.closePath();\r\n    // }\r\n    // drawCircle()\r\n    //let triangles = earcut([10,0, 0,50, 60,60, 70,10]); // returns [1,0,3, 3,2,1]\r\n   // quadrate\r\n   //  let a = [\r\n   //      [[0,100],[100,100],[100,0],[0,0]], //outer polygon\r\n   //      [[25,25],[75,25],[75,75],[25,75]] //hole\r\n   //  ]\r\n  /*\r\n   //  function triangulationCircle(stepСircle) {\r\n   //     const pointsForCircle = [];\r\n   //\r\n   //      let radius = 200;\r\n   //      let x = null;\r\n   //      let y = null;\r\n   //      pointsForCircle.push([300, 300]);\r\n   //      for (let phi = 0; phi <= 360; phi += stepСircle) {\r\n   //          x = Math.abs(Math.floor(radius * Math.cos(phi)) + 300);\r\n   //          y = Math.abs(Math.floor(radius * Math.sin(phi)) + 300);\r\n   //          pointsForCircle.push([x, y]);\r\n   //      }\r\n   //      const arrResult = [];\r\n   //      arrResult.splice(0,0,pointsForCircle)\r\n   //      console.log(arrResult)\r\n   //\r\n   //      triangulationEarcut(arrResult)\r\n   //  }\r\n   //  triangulationCircle(40);\r\n*/\r\n\r\n\r\n   // // circle\r\n   //  let circle = [\r\n   //      [[104,343],[115,222],[150,449],[243,491],[480,214],[277,101],[365,489],[397,125],[462,416]], //outer polygon\r\n   //     // [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]] //hole\r\n   //  ]\r\n\r\n    //polygon\r\n     let polygon = [\r\n         [[0,0],[500,0],[500,500],[400,500],[400,250],[100,250],[100,500],[0,500]], //outer polygon\r\n        // [[250,25],[250,50],[100,50],[100,25]] //hole\r\n     ]\r\n\r\n    //rectangle\r\n    let rectangleArrayPoints = [\r\n        [[1200,600],[1200,300],[600,300],[600,600],[800,100]], //outer polygon\r\n      //  [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]] //hole\r\n    ]\r\n\r\n    function triangulationEarcut(array) {\r\n        let toProcess = earcut.flatten(array);\r\n        let result = earcut(toProcess.vertices, toProcess.holes, toProcess.dimensions);\r\n        console.log(toProcess)\r\n        console.log(result)\r\n        let v = toProcess.vertices\r\n        for (let i = 0; i < result.length; i += 3) {\r\n            context.beginPath();\r\n            context.moveTo(v[result[i] * 2], v[result[i] * 2 + 1])\r\n            context.lineTo(v[result[i + 1] * 2], v[result[i + 1] * 2 + 1])\r\n            context.lineTo(v[result[i + 2] * 2], v[result[i + 2] * 2 + 1])\r\n            context.closePath();\r\n            context.stroke();\r\n        }\r\n        let deviation = earcut.deviation(toProcess.vertices, toProcess.holes, toProcess.dimensions, result);\r\n        console.log(deviation)\r\n    }\r\n    triangulationEarcut(rectangleArrayPoints)\r\n    triangulationEarcut(polygon)\r\n  //triangulationEarcut(circle)\r\n    return (\r\n        <div>\r\n            Hello!!!\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EarcutTest;"]},"metadata":{},"sourceType":"module"}