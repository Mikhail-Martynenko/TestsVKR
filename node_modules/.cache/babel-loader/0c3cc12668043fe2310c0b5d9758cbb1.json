{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misha\\\\Desktop\\\\\\u042E\\u0424\\u0423\\\\React\\\\tests-vkr\\\\app-test-vkr\\\\src\\\\EarcutTest.jsx\";\nimport React from 'react';\nimport earcut from \"earcut\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EarcutTest = () => {\n  let canvas = document.getElementById('canvas');\n  let context = canvas.getContext('2d'); // function drawCircle() {\n  //     context.beginPath();\n  //     context.fillStyle = \"#FFF\";\n  //     context.arc(300, 300, 200, 0, Math.PI * 2);\n  //     context.fill();\n  //     context.stroke();\n  //     context.closePath();\n  // }\n  // drawCircle()\n  //let triangles = earcut([10,0, 0,50, 60,60, 70,10]); // returns [1,0,3, 3,2,1]\n\n  let a = [[[0, 100], [100, 100], [100, 0], [0, 0]], //outer polygon\n  [[25, 25], [75, 25], [75, 75], [25, 75]] //hole\n  ];\n  let toProcess = earcut.flatten(a);\n  let result = earcut(toProcess.vertices, toProcess.holes, toProcess.dimensions);\n  console.log(toProcess);\n  console.log(result);\n  let v = triangles.vertices;\n\n  for (let i = 0; i < triangles.length; i += 3) {\n    const t0 = triangles[i * 3 + 0];\n    const t1 = triangles[i * 3 + 1];\n    const t2 = triangles[i * 3 + 2];\n    context.beginPath();\n    context.moveTo(triangles[t0 * 2], triangles[t0 * 2 + 1]);\n    context.lineTo(triangles[t1 * 2], triangles[t1 * 2 + 1]);\n    context.lineTo(triangles[t2 * 2], triangles[t2 * 2 + 1]);\n    context.closePath();\n    context.stroke();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello!!!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c = EarcutTest;\nexport default EarcutTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"EarcutTest\");","map":{"version":3,"sources":["C:/Users/misha/Desktop/ЮФУ/React/tests-vkr/app-test-vkr/src/EarcutTest.jsx"],"names":["React","earcut","EarcutTest","canvas","document","getElementById","context","getContext","a","toProcess","flatten","result","vertices","holes","dimensions","console","log","v","triangles","i","length","t0","t1","t2","beginPath","moveTo","lineTo","closePath","stroke"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,MAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAb;AACA,MAAIC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAd,CAFqB,CAIrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIC,CAAC,GAAG,CACJ,CAAC,CAAC,CAAD,EAAG,GAAH,CAAD,EAAS,CAAC,GAAD,EAAK,GAAL,CAAT,EAAmB,CAAC,GAAD,EAAK,CAAL,CAAnB,EAA2B,CAAC,CAAD,EAAG,CAAH,CAA3B,CADI,EAC+B;AACnC,GAAC,CAAC,EAAD,EAAI,EAAJ,CAAD,EAAS,CAAC,EAAD,EAAI,EAAJ,CAAT,EAAiB,CAAC,EAAD,EAAI,EAAJ,CAAjB,EAAyB,CAAC,EAAD,EAAI,EAAJ,CAAzB,CAFI,CAE8B;AAF9B,GAAR;AAIA,MAAIC,SAAS,GAAGR,MAAM,CAACS,OAAP,CAAeF,CAAf,CAAhB;AACA,MAAIG,MAAM,GAAGV,MAAM,CAACQ,SAAS,CAACG,QAAX,EAAqBH,SAAS,CAACI,KAA/B,EAAsCJ,SAAS,CAACK,UAAhD,CAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,MAAIM,CAAC,GAAGC,SAAS,CAACN,QAAlB;;AACA,OAAI,IAAIO,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,SAAS,CAACE,MAA7B,EAAqCD,CAAC,IAAI,CAA1C,EAA4C;AACxC,UAAME,EAAE,GAAGH,SAAS,CAACC,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAApB;AACA,UAAMG,EAAE,GAAGJ,SAAS,CAACC,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAApB;AACA,UAAMI,EAAE,GAAGL,SAAS,CAACC,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAApB;AACAb,IAAAA,OAAO,CAACkB,SAAR;AACAlB,IAAAA,OAAO,CAACmB,MAAR,CAAeP,SAAS,CAACG,EAAE,GAAG,CAAN,CAAxB,EAAkCH,SAAS,CAACG,EAAE,GAAG,CAAL,GAAS,CAAV,CAA3C;AACAf,IAAAA,OAAO,CAACoB,MAAR,CAAeR,SAAS,CAACI,EAAE,GAAG,CAAN,CAAxB,EAAkCJ,SAAS,CAACI,EAAE,GAAG,CAAL,GAAS,CAAV,CAA3C;AACAhB,IAAAA,OAAO,CAACoB,MAAR,CAAeR,SAAS,CAACK,EAAE,GAAG,CAAN,CAAxB,EAAkCL,SAAS,CAACK,EAAE,GAAG,CAAL,GAAS,CAAV,CAA3C;AACAjB,IAAAA,OAAO,CAACqB,SAAR;AACArB,IAAAA,OAAO,CAACsB,MAAR;AACH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxCD;;KAAM1B,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport earcut from \"earcut\";\r\n\r\nconst EarcutTest = () => {\r\n    let canvas = document.getElementById('canvas');\r\n    let context = canvas.getContext('2d');\r\n\r\n    // function drawCircle() {\r\n    //     context.beginPath();\r\n    //     context.fillStyle = \"#FFF\";\r\n    //     context.arc(300, 300, 200, 0, Math.PI * 2);\r\n    //     context.fill();\r\n    //     context.stroke();\r\n    //     context.closePath();\r\n    // }\r\n    // drawCircle()\r\n    //let triangles = earcut([10,0, 0,50, 60,60, 70,10]); // returns [1,0,3, 3,2,1]\r\n    let a = [\r\n        [[0,100],[100,100],[100,0],[0,0]], //outer polygon\r\n        [[25,25],[75,25],[75,75],[25,75]] //hole\r\n    ]\r\n    let toProcess = earcut.flatten(a);\r\n    let result = earcut(toProcess.vertices, toProcess.holes, toProcess.dimensions);\r\n    console.log(toProcess)\r\n    console.log(result)\r\n    let v = triangles.vertices\r\n    for(let i = 0; i < triangles.length; i += 3){\r\n        const t0 = triangles[i * 3 + 0];\r\n        const t1 = triangles[i * 3 + 1];\r\n        const t2 = triangles[i * 3 + 2];\r\n        context.beginPath();\r\n        context.moveTo(triangles[t0 * 2], triangles[t0 * 2 + 1]);\r\n        context.lineTo(triangles[t1 * 2], triangles[t1 * 2 + 1]);\r\n        context.lineTo(triangles[t2 * 2], triangles[t2 * 2 + 1]);\r\n        context.closePath();\r\n        context.stroke();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Hello!!!\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EarcutTest;"]},"metadata":{},"sourceType":"module"}